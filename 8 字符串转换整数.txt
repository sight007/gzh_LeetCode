/**
 * 请你来实现函数atoi，使字符串转换成整数，具体要求如下：
 * 1，丢弃无用的开头空字符串，找到第一个非空的字符为止;
 * 2，如果第一个字符为正负号时，则将该符号与后面尽可能多的连续数字组合起来，作为该整数的正负号;
 * 3，如果第一个字符是数字，则直接将其与之后连续的数字字符组合起来，形成整数
 * 4，如果字符串除了有效的整数部分之后，还有多余的字符，这些字符则忽略。
 * 5，如果字符串中的第一个非空格字符不是一个有效整数字符、字符串为空或字符串仅包含空白字符时，返回0。
 *
 * 这道题不是很难，而是规则麻烦
 *
 */

public static int test(String s){
		
		if(s == null || s =="") return 0;
		
		char[] sChar = s.trim().toCharArray();

		if(sChar.length == 0) return 0;
		
		int flag = 1;
		int start = 0;
		
		if(sChar[0] == '-'){
			flag = -1;
			start = 1;
		}else if(sChar[0] == '+'){
			flag = 1;
			start = 1;
		}else if(sChar[0] > '9' || sChar[0] < '0'){
			return 0;
		}else{
			start = 0;
		}
		
		int sum = 0;
		int temp = 0;
		for(int i=start; i<sChar.length; i++){
			if(sChar[i] >= '0' && sChar[i]<='9') {
				temp = sum*10 + (sChar[i] - '0');
				if((temp/10 != sum) && flag>0){
					return Integer.MAX_VALUE;
				}else if((temp/10 != sum) && flag<0){
					return Integer.MIN_VALUE;
				}
				sum = temp;
			}else{
				break;
			}
		}
		
		return sum*flag;
		
	}